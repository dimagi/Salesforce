public with sharing class OpportunityProductTrigger {
	
	// entry for Inserts
	public static void onUpdate(OpportunityLineItem[] newOppProduct) {
		Set<Id> oppIds = new Set<Id>();
		
		for (OpportunityLineItem oli : newOppProduct) {
			oppIds.add(oli.OpportunityId);
		}
		
		Map<Id, Opportunity> mapOpps = new Map<Id, Opportunity>();
		Set<Id> pricebookIds = new Set<Id>();
		
		List<Opportunity> opps = [select Id, Product_Text__c, 
                                         (select PricebookEntryId from OpportunityLineItems) 
                                  from Opportunity 
                                  where id in :oppIds];
                                  
		for (Opportunity opp : opps) {
            mapOpps.put(opp.Id, opp);
            for (OpportunityLineItem item : opp.OpportunityLineItems) {
            	pricebookIds.add(item.PricebookEntryId);
            }
                    		                        	
        }
		          
        Map<Id, String> productNames = new Map<Id, String>();       
        for (PricebookEntry pe: [select Id, Product2.Name, Product2Id from PricebookEntry where Id in :pricebookIds]) {
        	productNames.put(pe.Id, pe.Product2.Name);
        }       
        
        for (Opportunity opp : opps) {
        	opp.Product_Text__c = '';
        	for (OpportunityLineItem item : opp.OpportunityLineItems) {
        		if ((opp.Product_Text__c != '') && (!opp.Product_Text__c.endsWith('; '))) {
        			opp.Product_Text__c += '; ';
        		}
        		opp.Product_Text__c += productNames.get(item.PricebookEntryId);
        	}
        }
        
        update opps;
    }

}